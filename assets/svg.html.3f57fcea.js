import{_ as a,o as n,c as e,b as s}from"./app.f27417d2.js";const t={},o=s(`<h1 id="details-about-dynamic-svg" tabindex="-1"><a class="header-anchor" href="#details-about-dynamic-svg" aria-hidden="true">#</a> Details about Dynamic SVG</h1><h2 id="ceate-svg-element" tabindex="-1"><a class="header-anchor" href="#ceate-svg-element" aria-hidden="true">#</a> Ceate svg element</h2><p>If you are using a mime type that is using xml parser to parse your file (image+xml). You need to specify the xmlns attribute for the svg.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.w3.org/2000/svg&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="set-xlink-href-for-image-element" tabindex="-1"><a class="header-anchor" href="#set-xlink-href-for-image-element" aria-hidden="true">#</a> Set xlink:href for image element</h2><div class="language-image ext-image line-numbers-mode"><pre class="language-image"><code>image.setAttributeNS(
    &quot;http://www.w3.org/1999/xlink&quot;,
    &quot;xlink:href&quot;,
    &lt;url&gt;
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="framed-based-animtion-in-svg" tabindex="-1"><a class="header-anchor" href="#framed-based-animtion-in-svg" aria-hidden="true">#</a> Framed Based Animtion in SVG</h2><p>Solution here is to use <code>animate</code> tag to animate on <code>href</code>, This only works for separated frame images.</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- Pseudo Code --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>0</span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>0</span> <span class="token attr-name">w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>40</span> <span class="token attr-name">h</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>40</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>url</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animate</span>
        <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>href<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.3s<span class="token punctuation">&quot;</span></span><span class="token attr-name">,</span>
        <span class="token attr-name">values</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url1;url2;url3;url4<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">begin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>indefinite<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>animate</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="let-the-animate-to-hold" tabindex="-1"><a class="header-anchor" href="#let-the-animate-to-hold" aria-hidden="true">#</a> Let the animate to hold</h2><p>When you create animate using js, the animation might running under the hood. If you didn&#39;t set the <code>repeatCount</code> to <code>indefinite</code>, you are not likely to get a expected result.</p><p>So, you can set the <code>begin</code> attribute to <code>indefinite</code>, this tells the browser to hold the animation until you start it.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> animate <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animate<span class="token punctuation">.</span><span class="token function">beginElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Start the animation</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="element-move-along-a-path" tabindex="-1"><a class="header-anchor" href="#element-move-along-a-path" aria-hidden="true">#</a> Element move along a path</h2><p>Just use animateMotion.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;animateMotion path=&quot;...&quot;&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If the element you are moving is not a circle. You my find that the element is not centered on the path. Which might be annoying.</p><p>I never solved it. But I know the way to solve it is to subtract <code>half of the element&#39;s width and height</code> from the path coordinates. It may be different if you are using Bezier Curves.</p><h2 id="rotate-svg-element" tabindex="-1"><a class="header-anchor" href="#rotate-svg-element" aria-hidden="true">#</a> Rotate SVG element</h2><blockquote><p>In the CSS we have an animation that uses a transform to rotate the rectangle infinitely. transform-box: fill-box is used to make the transform-origin the center of the bounding box, so the rectangle spins in place. Without it, the transform origin is the center of the SVG canvas, and so you get a very different effect.</p></blockquote><p>So, to rotate a SVG elemnt. Doing this:</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">[tag]</span> <span class="token punctuation">{</span>
    <span class="token property">transform-box</span><span class="token punctuation">:</span> fill-box<span class="token punctuation">;</span>
    <span class="token property">transform-origin</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token comment">/* and then you can rotate */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),i=[o];function l(p,c){return n(),e("div",null,i)}var r=a(t,[["render",l],["__file","svg.html.vue"]]);export{r as default};
